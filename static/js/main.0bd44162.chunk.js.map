{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","datum","setDatum","dag","setDag","begintijd","setBeginTijd","eindtijd","setEindTijd","werkzaamheden","setWerkzaamheden","Container","fluid","className","Header","as","Form","Field","type","placeholder","onChange","e","target","value","TextArea","label","Button","color","onClick","preventDefault","objt","axios","post","then","response","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SA6DeA,MAxDf,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEQF,mBAAS,IAFjB,mBAEPG,EAFO,KAEFC,EAFE,OAGoBJ,mBAAS,IAH7B,mBAGPK,EAHO,KAGIC,EAHJ,OAIkBN,mBAAS,IAJ3B,mBAIPO,EAJO,KAIGC,EAJH,OAK4BR,mBAAS,IALrC,mBAKPS,EALO,KAKQC,EALR,KAsBd,OACC,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,YAA3B,UACC,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,6BACA,eAACC,EAAA,EAAD,CAAMH,UAAU,OAAhB,UACC,eAACG,EAAA,EAAKC,MAAN,WACC,yCACA,uBAAOC,KAAK,OAAOC,YAAY,2BAA2BC,SAAU,SAACC,GAAD,OAAOnB,EAASmB,EAAEC,OAAOC,aAG9F,eAACP,EAAA,EAAKC,MAAN,WACC,wCACA,uBAAOC,KAAK,OAAOC,YAAY,yBAAyBC,SAAU,SAACC,GAAD,OAAOjB,EAAOiB,EAAEC,OAAOC,aAG1F,eAACP,EAAA,EAAKC,MAAN,WACC,+CACA,uBAAOC,KAAK,OAAOC,YAAY,gCAAgCC,SAAU,SAACC,GAAD,OAAOf,EAAae,EAAEC,OAAOC,aAGvG,eAACP,EAAA,EAAKC,MAAN,WACC,6CACA,uBAAOC,KAAK,OAAOC,YAAY,+BAA+BC,SAAU,SAACC,GAAD,OAAOb,EAAYa,EAAEC,OAAOC,aAGrG,cAACP,EAAA,EAAKQ,SAAN,CAAeC,MAAM,gBAAgBN,YAAY,mCAAmCC,SAAU,SAACC,GAAD,OAAOX,EAAiBW,EAAEC,OAAOC,UAE/H,cAACG,EAAA,EAAD,CAAQC,MAAM,OAAOT,KAAK,SAASU,QAzCjB,SAACP,GACrBA,EAAEQ,iBAEF,IAAMC,EAAO,CAAE7B,QAAOE,MAAKE,YAAWE,WAAUE,iBAEhDsB,IACEC,KACA,qEACAF,GAEAG,MAAK,SAACC,GACNC,QAAQC,IAAIF,OA8BZ,4BCzCWG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0bd44162.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Container, Header } from 'semantic-ui-react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n\tconst [datum, setDatum] = useState('');\n\tconst [dag, setDag] = useState('');\n\tconst [begintijd, setBeginTijd] = useState('');\n\tconst [eindtijd, setEindTijd] = useState('');\n\tconst [werkzaamheden, setWerkzaamheden] = useState('');\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst objt = { datum, dag, begintijd, eindtijd, werkzaamheden };\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\t\"https://sheet.best/api/sheets/9dd5c7ac-a6b0-4df5-9053-67f37650687d\",\n\t\t\t\tobjt\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<Container fluid className=\"container\">\n\t\t\t<Header as=\"h2\">Urenregistratie</Header>\n\t\t\t<Form className=\"form\">\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Daum</label>\n\t\t\t\t\t<input type=\"date\" placeholder=\"Vul hier de datum in ...\" onChange={(e) => setDatum(e.target.value)} />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Dag</label>\n\t\t\t\t\t<input type=\"text\" placeholder=\"Vul hier de dag in ...\" onChange={(e) => setDag(e.target.value)} />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Start time</label>\n\t\t\t\t\t<input type=\"time\" placeholder=\"Vul hier de start tijd in ...\" onChange={(e) => setBeginTijd(e.target.value)} />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>End time</label>\n\t\t\t\t\t<input type=\"time\" placeholder=\"Vul hier de eind tijd in ...\" onChange={(e) => setEindTijd(e.target.value)} />\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.TextArea label='Werkzaamheden' placeholder='Vul hier de werkzaamheden in ...' onChange={(e) => setWerkzaamheden(e.target.value)} />\n\n\t\t\t\t<Button color=\"blue\" type=\"submit\" onClick={handleSubmit}>\n\t\t\t\t\tOpslaan\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}