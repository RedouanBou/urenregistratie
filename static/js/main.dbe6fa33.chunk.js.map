{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","data","fields","errors","Tabletop","init","key","callback","googleData","setState","simpleSheet","this","formIsValid","match","e","preventDefault","handleValidation","axios","post","then","response","console","log","alert","field","target","value","Container","fluid","className","Table","celled","Header","Row","HeaderCell","Body","map","obj","Cell","datum","dag","begintijd","eindtijd","werkzaamheden","Form","onSubmit","handleSubmit","bind","as","Field","type","name","placeholder","onChange","handleChange","style","color","TextArea","label","Button","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbe6fa33.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, Container, Header, Table } from 'semantic-ui-react';\nimport Tabletop from 'tabletop';\nimport axios from 'axios';\nimport './App.css';\n\n// https://docs.google.com/spreadsheets/d/e/2PACX-1vQknlBl2jgiw5adES3rgWjnU9Eq3dOzHt0cQH2sCRjST5Ub5FRJBuXXxGElApI9XfNpBUNiwiVdvDKD/pubhtml\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\tfields: {},\n\t\t\terrors: {}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tTabletop.init({\n\t\t  key: '1rkUBoSdpdkooSm2YKkHiVFhfFurXMMKi4apOtyEdxKA',\n\t\t  callback: googleData => {\n\t\t\tthis.setState({\n\t\t\t\tdata: googleData\n\t\t\t})\n\t\t  },\n\t\t  simpleSheet: true\n\t\t})\n\t  }\n\n\thandleValidation() {\n\t\tlet fields = this.state.fields;\n\t\tlet errors = this.state.errors;\n\t\tlet formIsValid = true;\n\n\t\t// Datum\n\t\tif(!fields[\"datum\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"datum\"] = \"Datum kan niet leeg zijn...\";\n\t\t}\n\n\t\t// Dag\n\t\tif(!fields[\"dag\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"dag\"] = \"Dag kan niet leeg zijn...\";\n\t\t}\n\n\t\tif(typeof fields[\"dag\"] !== \"undefined\") {\n\t\t\tif(!fields[\"dag\"].match(/^[a-zA-Z]+$/)){\n\t\t\t   formIsValid = false;\n\t\t\t   errors[\"dag\"] = \"Dag mag alleen uit letters bestaan\";\n\t\t\t}        \n\t\t }\n\n\t\t// Tijd\n\t\tif (!fields[\"begintijd\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"begintijd\"] = \"Begin tijd kan niet leeg zijn\";\n\t\t}\n\n\t\tif (!fields[\"eindtijd\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"eindtijd\"] = \"Eind tijd kan niet leeg zijn\";\n\t\t}\n\n\t\tif (fields[\"eindtijd\"] < fields[\"begintijd\"] || fields[\"begintijd\"] === fields[\"eindtijd\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"eindtijd\"] = \"Eind tijd kan niet kleiner of gelijk zijn dan begin tijd\";\n\t\t}\n\n\t\t// Werkzaamheden\n\t\tif (!fields[\"werkzaamheden\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"werkzaamheden\"] = \"Werkzaamheden kan niet leeg zijn\";\n\t\t}\n\n\t\tif(typeof fields[\"werkzaamheden\"] !== \"undefined\"){\n\t\t\tif(!fields[\"werkzaamheden\"].match(/^[a-zA-Z]+$/)){\n\t\t\t   formIsValid = false;\n\t\t\t   errors[\"werkzaamheden\"] = \"Werkzaamheden mag alleen uit letters bestaan\";\n\t\t\t}        \n\t\t}\n\n\t\tthis.setState({errors: errors});\n        return formIsValid;\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tif(this.handleValidation()) {\n\t\t\taxios.post(\"https://sheet.best/api/sheets/9dd5c7ac-a6b0-4df5-9053-67f37650687d\", this.state.fields).then((response) => {console.log(response); });\n\t\t\talert(\"Uurregistratie succesvol toegevoegd!\");\n\t\t} else {\n\t\t\talert(\"Form geeft foutmeldingen aan\");\n\t\t}\n\t};\n\n\thandleChange(field, e){         \n\t\tlet fields = this.state.fields;\n\t\tfields[field] = e.target.value;        \n\t\tthis.setState({fields});\n\t}\n\n\trender() {\n\t\tconst { data } = this.state;\n\n\t\treturn (\n\t\t\t<Container fluid className=\"container\">\n\t\t\t\t<Table celled className=\"data-table\">\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>Datum</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>Dag</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>Tijd</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>Taken</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata.map(obj => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{obj.datum}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{obj.dag}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{obj.begintijd} - {obj.eindtijd}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{obj.werkzaamheden}</Table.Cell>\n\t\t\t\t\t\t\t\t\t</Table.Row>\t\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t</Table>\n\n\t\t\t\t<Form className=\"form\" onSubmit= {this.handleSubmit.bind(this)}>\n\t\t\t\t\t<Header as=\"h2\">Urenregistratie</Header>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>Datum</label>\n\t\t\t\t\t\t<input type=\"date\" name=\"datum\" placeholder=\"Vul hier de datum in ...\" onChange={this.handleChange.bind(this, \"datum\")} value={this.state.fields[\"datum\"]} />\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors[\"datum\"]}</span>\n\t\t\t\t\t</Form.Field>\n\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>Dag</label>\n\t\t\t\t\t\t<input type=\"text\" name=\"dag\" placeholder=\"Vul hier de dag in ...\" onChange={this.handleChange.bind(this, \"dag\")} value={this.state.fields[\"dag\"]} />\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors[\"dag\"]}</span>\n\t\t\t\t\t</Form.Field>\n\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>Begin tijd</label>\n\t\t\t\t\t\t<input type=\"time\" name=\"begintijd\" placeholder=\"Vul hier de start tijd in ...\" onChange={this.handleChange.bind(this, \"begintijd\")} value={this.state.fields[\"begintijd\"]} />\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors[\"begintijd\"]}</span>\n\t\t\t\t\t</Form.Field>\n\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>Eind tijd</label>\n\t\t\t\t\t\t<input type=\"time\" name=\"eindtijd\" placeholder=\"Vul hier de eind tijd in ...\" onChange={this.handleChange.bind(this, \"eindtijd\")} value={this.state.fields[\"eindtijd\"]} />\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors[\"eindtijd\"]}</span>\n\t\t\t\t\t</Form.Field>\n\n\t\t\t\t\t<Form.TextArea name=\"werkzaamheden\" label='Werkzaamheden' placeholder='Vul hier de werkzaamheden in ...' onChange={this.handleChange.bind(this, \"werkzaamheden\")} value={this.state.fields[\"werkzaamheden\"]} />\n\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors[\"werkzaamheden\"]}</span>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Button color=\"blue\" type=\"submit\">\n\t\t\t\t\t\tOpslaan\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'tabletop';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}